name: Build and Deploy Quarto Website

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Setup Quarto
      uses: quarto-dev/quarto-actions/setup@v2
      with:
        version: pre-release

    - name: Setup R
      uses: r-lib/actions/setup-r@v2
      with:
        r-version: '4.4.3'
        use-public-rspm: true

    - name: Install system dependencies for R packages
      run: |
        sudo apt-get update
        sudo apt-get install -y \
          libcurl4-openssl-dev \
          libssl-dev \
          libxml2-dev \
          libfontconfig1-dev \
          libharfbuzz-dev \
          libfribidi-dev \
          libfreetype6-dev \
          libpng-dev \
          libtiff5-dev \
          libjpeg-dev \
          libgit2-dev \
          libgdal-dev \
          libgeos-dev \
          libproj-dev \
          libudunits2-dev \
          libnode-dev \
          libcairo2-dev \
          libxt-dev

    - name: Setup renv
      uses: r-lib/actions/setup-renv@v2
      with:
        cache-version: 1

    - name: Setup Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.13'

    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "requirements.txt"

    - name: Create virtual environment and install Python dependencies
      run: |
        uv venv .venv
        echo "VIRTUAL_ENV=$PWD/.venv" >> $GITHUB_ENV
        echo "$PWD/.venv/bin" >> $GITHUB_PATH

    - name: Install Python packages
      run: |
        if [ -f requirements.txt ]; then
          uv pip install -r requirements.txt
        fi

    - name: Build Quarto website
      run: |
        quarto render

    - name: Upload Pages artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: _site

  deploy:
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Deploy to GitHub Pages
      id: deployment
      uses: actions/deploy-pages@v4
