---
title: "TidyTemplate"
author: "Aaron Wright [`aawva@mit.edu`]"
date: "2025-06-19"
output:
  html_document: default
  pdf_document: default
execute:
  eval: false
---

> **Week:** <br>
> **Data:** <br>
> **Source:** <br>
> **Article:** <br>

[TidyTuesday on GitHub](https://github.com/rfordatascience/tidytuesday) <br>
Reference(s): [@tidytuesdayR]

<!-- THEMATICS AND RENDERING -->

::: cell
```{=html}
<style>
/* inline code */
code {
  background-color: #f5f5f5;
  color: #859901; /* solarized green */
  border-radius: 4px;
  padding: 2px 4px;
  font-family: monospace;
  font-size: 0.95em;
}

/* list item spacing for inline code */
li code {
  margin-left: 2px;
}

/* link styling */
a {
  color: #2AA198; /* solarized cyan */
  text-decoration: none;
}
a:hover {
  text-decoration: underline;
}
</style>
```
:::

```{r setup, include = FALSE}
knitr::opts_chunk$set(echo = TRUE, warning = F)
sessionInfo()
```

<!-- CONFIG-->

## Overview

This template is designed to be reproducible for any given TidyTuesday challenge. Delete this Overview chunk (and other information, as needed) once the file has been duplicated for the week.

## Session Info

Session information is printed for reproducibility. GitHub does not render .qmd files by default. Render to markdown using --to gfm or --to markdown if intending to view on GitHub.

-   R version: `r R.version.string`
-   Python version: displayed via `!python --version`\
-   Quarto version: `quarto --version`\
-   Key packages: `tidyverse`, `here`, `readxl`, `stringr`
-   Quarto rendering: `quarto render README.qmd --to gfm` or `quarto render README.qmd --to markdown`

## Environment & data

Essential packages included are used in all TidyTuesday challenges. Supplemental are challenge-specific.

```{r environment}
# essentials
library(here)
library(tidyverse)
library(tidytuesdayR)

# additional libraries here
```

```{r tidytuesday data, include = FALSE}
# usually provided on GitHub; if not, use own script

# function to load and prepare all Tidytuesday datasets and save them as individual data frames
prepare_tidytuesday_data <- function(date) {
  # load all datasets for the specified date
  tt_data <- tt_load(date)
  
  if (length(tt_data) == 0) {
    stop("No datasets found for this date. Check the availability of datasets.")
  }
  
  # define a helper function to check for parsing issues
  check_parsing_issues <- function(dataset, dataset_name) {
    if (inherits(dataset, "tbl_df")) { # ensure dataset is a tibble
      issues <- problems(dataset)
      if (nrow(issues) > 0) {
        cat("\n--- Parsing issues found in dataset:", dataset_name, "---\n")
        print(issues)
      }
    }
  }
  
  # if there's only one dataset, tt_data might not be a named list
  if (!is.list(tt_data) || is.null(names(tt_data))) {
    dataset_name <- "tidytuesday_dataset"
    dataset <- tt_data
    # print structure for EDA
    cat("\n--- Structure of single dataset ---\n")
    print(str(dataset))
    # check for parsing issues
    check_parsing_issues(dataset, dataset_name)
    # assign the dataset to the global environment
    assign(dataset_name, dataset, envir = .GlobalEnv)
  } else {
    # for multiple datasets
    cat("Datasets found for this date:", paste(names(tt_data), collapse = ", "), "\n")
    
    # iterate over each dataset
    lapply(seq_along(tt_data), function(i) {
      dataset_name <- names(tt_data)[i]
      dataset <- tt_data[[i]]
      
      # print structure for EDA
      cat("\n--- Structure of dataset:", dataset_name, "---\n")
      print(str(dataset))
      
      # check for parsing issues
      check_parsing_issues(dataset, dataset_name)
      
      # assign the dataset to the global environment
      assign(paste0(dataset_name), dataset, envir = .GlobalEnv)
    })
  }
  
  # return all datasets as a named list for further manipulation if needed
  return(tt_data)
}

# example usage for Tidytuesday dataset(s) from the specified date
tidytuesday_data <- prepare_tidytuesday_data("YEAR-MO-DA")
```

<!-- CODE -->

## Tidying

Data for a give project live at `here("data", "YYYY_WK_TITLE")`. Use tidying script from GitHub as provided.

```{r tidying}
# code for tidying here
```

## TidyTuesday challenge

```{r TidyTuesday main chunk}
# main code here - have fun!
```

## Final visualization

```{r final visualization}
# visualization here
```

## Citation information (TidyTuesdayR)

```{r citation}
# cite your sources!
citation("tidytuesdayR")
```

## Sharing

Considering adding a caption and sharing to socials!

```{html}
# caption here
```