{
  "hash": "99dc8daf1182ad13c3cea0191d0ecd1a",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: \"Democracy Data Analysis\"\nsubtitle: \"TidyTuesday Week 45\"\ndate: \"2024-11-05\"\nauthor: \"gnoblet\"\ncategories: [python, geospatial, altair, geopandas, democracy]\n---\n\n## Overview\n\nThis week's TidyTuesday focused on democracy data, exploring which countries are considered democratic over time. I created interactive world maps using Python to visualize the evolution of democratic states from 1950 to the present.\n\n## Dataset\n\nThe dataset contains information about democracy classifications for countries worldwide, spanning from 1950 to recent years. Each country is classified as democratic or non-democratic for each year.\n\n**Source**: [TidyTuesday Democracy Data](https://github.com/rfordatascience/tidytuesday/tree/master/data/2024/2024-11-05)\n\n## Analysis\n\n### Libraries Used\n- `pandas` - Data manipulation and analysis\n- `geopandas` - Geospatial data handling and operations\n- `altair` - Interactive statistical visualizations\n\n### Data Loading and Preparation\n\n::: {#load-data .cell execution_count=1}\n``` {.python .cell-code}\n# Get CSV data\nimport pandas as pd\ndf = pd.read_csv('https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2024/2024-11-05/democracy_data.csv')\n\nprint(f\"Dataset shape: {df.shape}\")\nprint(f\"Years covered: {df['year'].min()} - {df['year'].max()}\")\nprint(f\"Countries: {df['country_code'].nunique()}\")\nprint(f\"Democratic classifications: {df['is_democracy'].value_counts()}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDataset shape: (14768, 43)\nYears covered: 1950 - 2020\nCountries: 208\nDemocratic classifications: is_democracy\nFalse    8000\nTrue     6706\nName: count, dtype: int64\n```\n:::\n:::\n\n\n### Geospatial Data Integration\n\n::: {#geospatial-data .cell execution_count=2}\n``` {.python .cell-code}\n# Get world countries geojson\nimport geopandas as gpd\nworld = gpd.read_file('https://datahub.io/core/geo-countries/_r/-/data/countries.geojson')\n\nprint(f\"World geometries: {len(world)} countries\")\nprint(f\"Available columns: {world.columns.tolist()}\")\nprint(f\"Sample of country codes: {world['ISO_A3'].head().tolist() if 'ISO_A3' in world.columns else 'ISO_A3 not found'}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nWorld geometries: 258 countries\nAvailable columns: ['name', 'ISO3166-1-Alpha-3', 'ISO3166-1-Alpha-2', 'geometry']\nSample of country codes: ISO_A3 not found\n```\n:::\n:::\n\n\n### Data Joining Function\n\n::: {#join-function .cell execution_count=3}\n``` {.python .cell-code}\n# Function that left joins DataFrame and GeoDataFrame\ndef left_join_gdf(df, gdf, key_df, key_gdf, how='left'):\n    \"\"\"\n    Join democracy data with world geometries\n    \"\"\"\n    return pd.merge(df, gdf, left_on=key_df, right_on=key_gdf, how=how).set_geometry('geometry')\n\n# Check available country code columns\nprint(\"Democracy data country codes sample:\", df['country_code'].head().tolist())\nprint(\"World data columns:\", [col for col in world.columns if 'ISO' in col or 'CODE' in col or col in ['ADMIN', 'NAME']])\n\n# Find the appropriate ISO3 column\niso3_columns = [col for col in world.columns if 'ISO' in col and '3' in col]\nprint(f\"Available ISO3 columns: {iso3_columns}\")\n\n# Use the first available ISO3 column\nif iso3_columns:\n    country_col = iso3_columns[0]  # Should be 'ISO3166-1-Alpha-3'\nelse:\n    # Fallback to first column that might contain country codes\n    potential_cols = [col for col in world.columns if any(term in col.upper() for term in ['ISO', 'CODE', 'ADMIN', 'NAME'])]\n    country_col = potential_cols[0] if potential_cols else world.columns[0]\n\nprint(f\"Using column: {country_col}\")\n\n# Join democracy data with world geometries\ndf_shp = left_join_gdf(\n    df,\n    world,\n    key_df='country_code', \n    key_gdf=country_col, \n    how='left'\n)\n\nprint(f\"Joined dataset shape: {df_shp.shape}\")\nprint(f\"Countries with geometry: {df_shp['geometry'].notna().sum()}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDemocracy data country codes sample: ['AFG', 'AFG', 'AFG', 'AFG', 'AFG']\nWorld data columns: ['ISO3166-1-Alpha-3', 'ISO3166-1-Alpha-2']\nAvailable ISO3 columns: ['ISO3166-1-Alpha-3', 'ISO3166-1-Alpha-2']\nUsing column: ISO3166-1-Alpha-3\nJoined dataset shape: (14768, 47)\nCountries with geometry: 14342\n```\n:::\n:::\n\n\n### Visualization Setup\n\n::: {#viz-setup .cell execution_count=4}\n``` {.python .cell-code}\nimport altair as alt\n\n# Color scheme for democracy status\ncol1 = '#5F4B8BFF'  # Democracy\ncol2 = '#E69A8DFF'  # Non-democracy  \ncol3 = '#4c4b4c'    # No data\n\n# Focus on a specific year for detailed analysis\nyear = 2020\ndf_to_alt = df_shp[df_shp['year'] == year].copy()\n\nprint(f\"Data for {year}: {len(df_to_alt)} records\")\nprint(f\"Democratic countries in {year}: {df_to_alt['is_democracy'].sum()}\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nData for 2020: 208 records\nDemocratic countries in 2020: 129\n```\n:::\n:::\n\n\n### Interactive Map Creation\n\n::: {#create-map .cell execution_count=5}\n``` {.python .cell-code}\n# Create interactive choropleth map\nchart = alt.Chart(\n    df_to_alt,\n    title=alt.Title(\n        f'{year} States Considered Democratic',\n        subtitle='Global view of democratic classifications'\n    )\n).mark_geoshape(\n    stroke='white',\n    strokeWidth=0.5\n).encode(\n    color=alt.Color(\n        'is_democracy:N', \n        scale=alt.Scale(\n            domain=[False, True],\n            range=['#E69A8DFF', '#5F4B8BFF']\n        ),\n        legend=alt.Legend(\n            title='Democratic Status',\n            labelExpr=\"datum.value ? 'Democratic' : 'Non-Democratic'\"\n        )\n    ),\n    tooltip=[\n        alt.Tooltip('ADMIN:N', title='Country'),\n        alt.Tooltip('is_democracy:N', title='Democratic'),\n        alt.Tooltip('year:O', title='Year')\n    ]\n).resolve_scale(\n    color='independent'\n).properties(\n    width=800,\n    height=400\n)\n\n# Save to png\nchart.save('week_45.png')\n```\n:::\n\n\n### Temporal Analysis\n\n::: {#temporal-analysis .cell execution_count=6}\n``` {.python .cell-code}\n# Analyze democratic trends over time\ndemocracy_by_year = df.groupby('year')['is_democracy'].agg(['sum', 'count']).reset_index()\ndemocracy_by_year['percentage'] = (democracy_by_year['sum'] / democracy_by_year['count']) * 100\n\nprint(\"Democratic trends over time:\")\nprint(democracy_by_year.head(10))\n\n# Create trend visualization\ntrend_chart = alt.Chart(democracy_by_year).mark_line(\n    point=True,\n    color='#5F4B8BFF'\n).encode(\n    x=alt.X('year:O', title='Year'),\n    y=alt.Y('percentage:Q', title='Percentage of Democratic Countries'),\n    tooltip=['year:O', 'percentage:Q', 'sum:Q', 'count:Q']\n).properties(\n    width=600,\n    height=300,\n    title='Percentage of Democratic Countries Over Time'\n)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nDemocratic trends over time:\n   year sum  count percentage\n0  1950  49    207  23.671498\n1  1951  51    207  24.637681\n2  1952  57    207  27.536232\n3  1953  59    207  28.502415\n4  1954  62    207  29.951691\n5  1955  61    207  29.468599\n6  1956  63    207  30.434783\n7  1957  64    207  30.917874\n8  1958  69    207  33.333333\n9  1959  66    207  31.884058\n```\n:::\n:::\n\n\n### Save\n\n::: {#3be97966 .cell execution_count=7}\n``` {.python .cell-code}\n# save png image\n\n# save gif\n```\n:::\n\n\n## Methodology\n\n### Geospatial Processing\n- Used `geopandas` for efficient spatial data operations\n- Joined democracy data with world country geometries using ISO country codes\n- Handled missing geometric data for certain country codes\n\n### Visualization Approach\n- Implemented `altair` for interactive choropleth maps\n- Used diverging color scheme to distinguish democratic vs non-democratic states\n- Added interactive tooltips for detailed country information\n\n### Data Analysis\n- Calculated democratic percentages by year to show global trends\n- Identified temporal patterns in democratization processes\n- Analyzed geographic clustering of democratic institutions\n\n## Technical Notes\n\n- **Color Accessibility**: Chosen color scheme is colorblind-friendly\n- **Interactive Features**: Maps include hover tooltips and zoom functionality\n- **Performance**: Optimized for web display with appropriate data filtering\n- **Reproducibility**: All code uses publicly available datasets\n\n## Viz\n\n![](week_45.png)\n\n",
    "supporting": [
      "week_45_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}